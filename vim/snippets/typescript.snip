snippet     nclass
abbr        class extends React.Component<WithStyles<>> {...}
options     head
  import { Theme, WithStyles, createStyles, withStyles } from '@material-ui/core/styles';
  import React from 'react';

  const styles = (theme: Theme) => createStyles({
    container: {}
  });

  class ${1:#:NAME} extends React.Component<WithStyles<typeof styles>> {
    public render() {
      return null;
    }
  }

  export default withStyles(styles)(${2:#:NAME});

snippet     nsfc
abbr        const {...} React.SFC<WithStyles<typeof styles>> {...}
options     head
  import { Theme, WithStyles, createStyles, withStyles } from '@material-ui/core/styles';
  import React from 'react';

  const styles = (theme: Theme) => createStyles({
    container: {}
  });

  const ${1:#:NAME}: React.SFC<WithStyles<typeof styles>> = ({ classes }) => {
      return null;
  }

  export default withStyles(styles)(${2:#:NAME});

snippet     jsfc
abbr        const {...}: React.SFC<{...}> { ... }
options     head
  interface ${1:#:NAME} {
    ${2:#:TARGET}
  }

  const ${3:#:NAME}: React.SFC<${4:#:NAME}> = ({ ${5:#:NAME} }) => {
      return null;
  }

snippet     jclass
abbr        class extends React.Component<{...}> {...}
options     head
  interface ${1:#:NAME} {
    ${2:#:TARGET}
  }

  class ${3:#:NAME} extends React.Component<${1:#:NAME}> {
    public render() {
      return null;
    }
  }

snippet     nstore
abbr        const {...}Store = React.createContext<IState>({});
options     head
  import React from 'react';

  interface IState {}

  export const ${1:#:NAME}Store = React.createContext<IState>({});

  const ${2:#:NAME}Provider: React.SFC<{}> = ({ children }) => {
    return (
      <${3:#:NAME}.Provider value={{}}>{children}</${3:#:NAME}.Provider>
    );
  };

  export default ${3:#:NAME}Provider;

snippet     nfc
abbr        const {...} = React.SFC<{}> = ({}) => {
options     head
  import React from 'react';

  const ${1:#:NAME}: React.SFC<{}> = ({}) => {
    return null;
  };

  export default ${2:#:NAME};
