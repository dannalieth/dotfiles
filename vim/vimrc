"------------PATHOGEN-----------
call pathogen#runtime_append_all_bundles()
call pathogen#helptags()

"------------MISCELANEOUS------
syntax enable

set noswapfile " No need of .swap files with good backup systems

set lazyredraw " No redrawing while executing macros

set autoread   " Reload files changed outside of vim

" enable matchit plugin which ships with vim and greatly enhances '%'
runtime macros/matchit.vim

" keep the cursor visible within 3 lines when scrolling
set scrolloff=3

let mapleader = ","

" resize vertical split window
nmap <C-Up> <C-w>>
nmap <C-Down> <C-w><

set backspace=indent,eol,start " Allow backspace over anything"

set complete=.,w,b,u,t,i " Autocompletes

" Timeout used to wait btwn keystrokes for e.g. ESC+O
" The default value is 1sec which feels like an eternity
set timeoutlen=100

" Cut and paste remembers original selection
xnoremap p pgvy

nnoremap <F2> :set nonumber!<CR>
nnoremap <F3> :NERDTreeToggle<CR>
nnoremap <F4> :TagbarToggle<CR>

"------------DISPLAY------------
" Colorscheme
set background=dark
let g:solarized_termtrans=1
let g:solarized_termcolors=256
let g:solarized_contrast="high"
let g:solarized_visibility="high"
colorscheme solarized

" Wildmenu
highlight WildMenu ctermfg=green guifg=green

" Feature display
set nonumber " Not show line numbers (initially)
set ruler " (Bottom-right) Show line/col position
set ls=2 " (Bottom) path/filename + ruler
set cursorline " Highlight current line
set mouse=a   " Enable mouse selection
set wildmenu " (Bottom) Enable menu selection

"------------Vim tabs-----------
ca tn tabnew
noremap <S-j> gT<CR>
noremap <S-k> gt<CR>

"------------Fugitive Vim diff-----------
noremap <leader>2 :diffget 2<CR> :diffupdate<CR>
noremap <leader>3 :diffget 3<CR> :diffupdate<CR>

"------------GREP--------------
nnoremap <C-G> :silent Ggrep <cword> <CR> :redraw!<CR>
vnoremap <C-G> "hy:silent Ggrep "<C-r>h" <CR> :redraw!<CR>
autocmd QuickFixCmdPost *grep* cwindow " Displays grep results inside of quickfix window as opposed to std out

"------------HELPER FUNCTIONS-----
function! Html()
  :normal ggVGgJ
  :%s/>\s*</>\r</g
  :normal ggVG=
endfunction

function Location()
  :echo expand('%:p')
endfunction

"------------PRETTIFY-------------
"ca json %!python -m json.tool
"ca html call Html()<CR>
ca ghist Glog -p -- %
"------------SEARCH------------
set ignorecase  " Case insensitive search
set smartcase
set incsearch   " Incremental search
set hlsearch
" Search and replace
vnoremap <C-r> "hy:%s/<C-r>h//gc<left><left><left>
vnoremap <C-e> "hy:bufdo %s/<C-r>h//gc\|update<left><left><left><left><left><left><left><left><left><left>

"------------INDENTATION-------
set autoindent
set smartindent
filetype on
filetype plugin on
filetype indent on

"------------TABS--------------
set tabstop=2
set shiftwidth=2
set expandtab

"------------COMMAND SHORTCUT----
" Swap : for ;
nnoremap ; :
nnoremap : ;
vnoremap ; :
vnoremap : ;

"------------NAVIGATION---------
" Window navigation
noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l

"------------COMMAND-T----------
"noremap <C-t> :CommandT<CR>
"noremap <leader>f :CommandTFlush<CR>

"------------CTRL-P-------------
let g:ctrlp_max_files=1000000
let g:ctrlp_working_path_mode = 0
let g:ctrlp_by_filename = 1
let g:ctrlp_match_window_reversed = 0
"let g:ctrlp_mruf_include = '\.py$\|\.rb$|\.cpp$|\.cc$|\.h$|\.java$|\.coffee$|\.less$|\.handlebar$|\.js$'
let g:ctrlp_map = '<c-f>'
let g:ctrlp_cache_dir="/tmp/ctrlp"
let g:ctrlp_clear_cache_on_exit=0
" Sane Ignore For ctrlp
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\.git$\|\.hg$\|\.svn$\|build$\|ecbuild$\|bin$\|compiler_cache$',
  \ 'file': '\.exe$\|\.so$\|\.dat$|\.class$'
  \ }
set wildignore+=*/tmp/*,*.class,*.git,*.swp,*.jar

"----Extensions----
let g:ctrlp_extensions = ['funky']
let g:ctrlp_funky_syntax_highlight = 1
noremap <C-B> :CtrlPFunky<CR>
" narrow the list down with a word under cursor
nnoremap <C-T> :execute 'CtrlPFunky ' . expand('<cword>')<Cr>

"------------CTAGS--------------
set tags=tags
nnoremap <F8> :!/usr/bin/ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR>

" Tagbar: a better TagList
let g:tagbar_usearrows = 1
"------------GVIM---------------
let osys = system("uname -o")
if has('gui_running')
  set guioptions=  " Removes: toolbar, scrollbar, taskbar
  set guifont=Monaco:h12
endif

"------------SUPERTABS-----------
let g:SuperTabDefaultCompletionType = "context"

"------------SYNTASTIC-----------
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_jump = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1

let g:syntastic_mode_map={ 'mode': 'active',
                     \ 'active_filetypes': [],
                     \ 'passive_filetypes': ['html', 'java', 'objcpp', 'coffee'] }
let g:syntastic_coffee_checkers = ['coffee', 'coffeelint']
let g:syntastic_coffee_coffeelint_args = "--csv --file /Users/diran/coffeelint.json"
let g:syntastic_enable_signs=1
let g:syntastic_error_symbol='✗'
let g:syntastic_warning_symbol='⚠'

"------------CLOSETAG------------
autocmd FileType html,handlebars,mako,xml let g:closetag_html_style=1
autocmd FileType html,handlebars,mako,xml source ~/.vim/bundle/closetag/plugin/closetag.vim

"------------POWERLINE------------
set nocompatible   " Disable vi-compatibility
set laststatus=2   " Always show the statusline
set encoding=utf-8 " Necessary to show Unicode glyphs
set noshowmode     " Hide the default mode text (e.g. -- INSERT -- below the statusline)
let g:Powerline_colorscheme = 'solarized256'

"------------ZOOMWIN------------
nnoremap + :ZoomWin<CR>

"------------NERDTREE------------
nnoremap <F5> :NERDTreeFind<CR>

"------------FILE TYPES------------
if osys == "Cygwin\n"
    autocmd BufNewFile,BufRead *.txt colorscheme default
endif
autocmd BufNewFile,BufRead *.less set ft=css
autocmd BufNewFile,BufRead *.coffee_bare,*.cjsx set ft=coffee
autocmd BufNewFile,BufRead *.h,*.m set ft=objcpp
autocmd FileType java set tabstop=4|set shiftwidth=4
autocmd FileType coffee set tabstop=2|set shiftwidth=2
